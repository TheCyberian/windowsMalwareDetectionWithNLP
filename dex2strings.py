import re
import subprocess

# TODO 1: Read all the dex files from all apks
# TODO 2: Store that in a csv/txt for each apk
# TODO 3: Vectorize the dex values.


def extract_dex_from_xml_in_path(output_path=None):
    cmd_out: bytes = subprocess.run(
        'find /home/cyberian/PycharmProjects/androidFeatureExtraction/apks/decompiled/ -type f -name "*.dex"',
        shell=True,
        capture_output=True,
        text=True,
        check=True).stdout.split('\n')

    # print(cmd_out)
    apk_names_list = []
    for index, file_path in enumerate(cmd_out):
        if len(file_path) > 0:
            pattern = "\/\w+\/\w+\/\w+\/\w+\/\w+\/\w+\/\w+\/\w+"
            file_name = re.search(pattern, file_path).group(0)
            apk_names_list.append(file_name)
            print(file_name)
        else:
            print("Probably the end of list!")

    unique_file_names = set(apk_names_list)
    # print("unique_file_names")
    # print(unique_file_names)
    # print(len(unique_file_names))
    # print("apk_names_list")
    # print(apk_names_list)
    # print(len(apk_names_list))
    for index, apk in enumerate(unique_file_names):
        name = re.search('(\w+)$|(\w)+(.apk)$', apk).group(0)
        print(index, name)
        for file_path in cmd_out:
            if apk in file_path:
                print(file_path)
                # Write the list to file named with regex
                # with open(file_path, 'rb') as dex_file:
                #     dex_data = dex_file.read()
                #     # unique_strings_in_apk.update(strings)
                # cmd_out.remove(file_path)
                # print(dex_data)


extract_dex_from_xml_in_path()
